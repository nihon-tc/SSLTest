apply plugin: 'com.android.application'
apply plugin: 'com.github.gfx.ribbonizer'

android {
    compileSdkVersion _compileSdkVersion as int
    buildToolsVersion _buildToolsVersion
    defaultConfig {
        applicationId "nihon_tc.com.ssltest"
        minSdkVersion 9
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        encoding = 'UTF-8'
        sourceCompatibility _JavaVersion as org.gradle.api.JavaVersion
        targetCompatibility _JavaVersion as org.gradle.api.JavaVersion
    }

    dataBinding{
        enabled = true
    }

    buildTypes {
        debug {
            debuggable true
            testCoverageEnabled false //step debugが偶に動かなくなるのでおまじない

            //AS上からInstantRunが実行されたときのみ適応☆
            def isIdeBuild = "false"
            def compilation = project.properties['android.optional.compilation'] as String
            if (compilation != null && compilation.indexOf("INSTANT_DEV") != -1) {
                isIdeBuild = "true"
            }

            ant.echo "[isIdeBuild]:" + isIdeBuild

            // Java8 default support(AS2.4p5 upper)
            if (compileOptions.sourceCompatibility == JavaVersion.VERSION_1_8) {
                defaultConfig.minSdkVersion 24
                defaultConfig.multiDexEnabled true
                defaultConfig.multiDexKeepProguard file('multi-dex-keep.txt')
            } else //■
            if ("true".equalsIgnoreCase(isIdeBuild) && compileOptions.sourceCompatibility != JavaVersion.VERSION_1_8) {
                defaultConfig.minSdkVersion 21 //HotSwap対応(AS2.3 upper)
            } else if(_UseShurinker == true){
                ant.echo "[use Shurinker]"
                //=== Build Shurinkerを実行 ===
                minifyEnabled true
                useProguard false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'shrinker-rules.pro'
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    dexOptions {
//        javaMaxHeapSize "2G"
//    }

    lintOptions {
        //== 旧Lint系はココらへんの記述でOKな話がよく ==
        checkReleaseBuilds false
        abortOnError false

        //== 新規Lint系は明示的に指定しないと無効にならない ==
        disable 'GradleCompatible'
        disable 'InnerclassSeparator'
    }

    packagingOptions {
        exclude 'lib/mips/librealm-jni.so'
        exclude 'lib/x86_64/librealm-jni.so'
        //exclude 'lib/x86/librealm-jni.so'
        exclude 'lib/arm64-v8a/librealm-jni.so'
        //exclude 'lib/armeabi-v7a/librealm-jni.so'


        exclude 'org/bouncycastle/LICENSE.class'
    }

    sourceSets {
        main {
            java {
                exclude 'org/bouncycastle/LICENSE.class'
            }
        }
        debug { assets.srcDirs = ['src/debug/assets', 'src/debug/assets/'] }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'


    compile "com.android.support:appcompat-v7:${_supportLibraryVersion}"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    debugCompile 'com.android.support:multidex:1.0.1'

    compile 'com.github.castorflex.smoothprogressbar:library:1.1.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'

    compile 'com.google.code.gson:gson:2.7'

    compile 'com.squareup.okhttp3:okhttp:3.7.0'
    debugCompile 'com.squareup.okhttp3:mockwebserver:3.7.0'
}

apply plugin: 'realm-android'

realm {
    syncEnabled = true
}

